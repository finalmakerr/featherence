void main_vertex
(
    float4 position : POSITION,
    out float4 oPosition : POSITION,
    uniform float4x4 modelViewProj,
    float2 tex : TEXCOORD,
    out float2 oTex : TEXCOORD
)
{
    oPosition = mul(modelViewProj, position);
    oTex = tex;
}

struct input
{
    float2 video_size;
    float2 texture_size;
    float2 output_size;
    float frame_count;
    float frame_direction;
    float frame_rotation;
};

float4 main_fragment(uniform sampler2D tex : TEXUNIT0, float2 co : TEXCOORD0, uniform input IN) : COLOR
{
    float3 texel = tex2D(tex, co).rgb;
    float3 pixelHigh = (1.2 - (0.2 * texel)) * texel;
    float3 pixelLow  = (0.85 + (0.1 * texel)) * texel;
    float selectY = mod(co.y * 2 * IN.texture_size.y, 2.0);
    float selectHigh = step(1.0, selectY);
    float selectLow = 1.0 - selectHigh;
    float3 pixelColor = (selectLow * pixelLow) + (selectHigh * pixelHigh);

    return float4(pixelColor, 1.0);
}
